{**
 * @param array    $columns           Available columns
 * @param array    $actions           Available actions
 * @param array    $exports           Available exports
 * @param Row[]    $rows              List of rows (each contain a item from data source)
 * @param DataGrid $control           Parent (DataGrid)
 * @param string   $original_template Original template file path
 * @param string   $icon_prefix       Icon prefix (fa fa-)
 *}
{extends $original_template}
<div class="datagrid-tree-item-children datagrid-tree" n:snippet="table" n:block="data" {if $control->isSortable()}data-sortable-tree data-sortable-url="{plink $control->getSortableHandler()}" data-sortable-parent-path="{$control->getSortableParentPath()}"{/if}>
    {snippetArea items}
        <div class="row-group-actions" n:if="$hasGroupActions || $exports || $toolbar_buttons || $control->canHideColumns() || $inlineAdd" n:block="group-actions">

            <div colspan="{$control->getColumnsCount()}" class="form-inline">
                <h4 style="float: left;">{$control->getHeader()}</h4>

                <div class="datagrid-toolbar" n:if="$control->canHideColumns() || $inlineAdd || $exports || $toolbar_buttons">
                                    <span n:if="$toolbar_buttons">
                                            {foreach $toolbar_buttons as $toolbar_button}{$toolbar_button->renderButton()}{/foreach}
                                    </span>

                    <span class="datagrid-exports" n:if="$exports" n:snippet="exports" n:block="exports">
                                            {foreach $exports as $export}{$export->render()}{/foreach}
                                    </span>

                    <div class="datagrid-settings" n:block="settings" n:if="$control->canHideColumns() || $inlineAdd">
                        {**
                         * Inline add
                         *}
                        {if $inlineAdd}
                            {$inlineAdd->renderButtonAdd()}
                        {/if}

                        {**
                         * Hideable columns
                         *}
                        <div class="btn-group">

                            {snippet resetfiltersnippet}
                                {if $control->hasOuterFilterRendering()}
                                <button class="btn btn-xs btn-primary active" style="margin-right: 10px;" type="button" data-toggle="collapse" data-target="#datagrid-{$control->getName()}-row-filters">
                                    <i class="{$icon_prefix}filter"></i>
                                </button>
                                {/if}
                                <a n:if="$filter_active" n:href="resetFilter!"
                                        class="ajax btn btn-danger btn-sm reset-filter" style="padding: 1px 10px; margin-right: 10px;">
                                    <span class="fa fa-minus-circle"></span> Resetova≈•</a>
                                <button type="button" class="btn btn-xs btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" n:if="$control->canHideColumns()">
                                    <i n:block = "icon-gear" class="{$icon_prefix}gear"></i>
                                </button>

                                <ul class="dropdown-menu dropdown-menu-right dropdown-menu--grid">
                                    <li n:foreach="$columns_visibility as $v_key => $visibility">
                                        {if $visibility['visible']}
                                            <a n:href="hideColumn!, column => $v_key" class="ajax">
                                                <i n:block = "icon-checked" class="{$icon_prefix}check-square-o"></i>
                                                {include #column-header, column => $visibility['column']}
                                            </a>
                                        {else}
                                            <a n:href="showColumn!, column => $v_key" class="ajax">
                                                <i n:block = "icon-unchecked" class="{$icon_prefix}square-o"></i>
                                                {include #column-header, column => $visibility['column']}
                                            </a>
                                        {/if}
                                    </li>
                                    <li role="separator" class="divider"></li>
                                    <li>
                                        <a n:href="showAllColumns!" class="ajax"><i n:block = "icon-eye" class="{$icon_prefix}eye"></i> {='ublaboo_datagrid.show_all_columns'|translate}</a>
                                    </li>
                                    <li n:if="$control->hasSomeColumnDefaultHide()">
                                        <a n:href="showDefaultColumns!" class="ajax"><i n:block = "icon-repeat" class="{$icon_prefix}repeat"></i> {='ublaboo_datagrid.show_default_columns'|translate}</a>
                                    </li>
                                </ul>
                            {/snippet}


                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br class='clear'>
        <div class="datagrid-tree-item datagrid-tree-header" n:snippet="item-header">
            <div class="datagrid-tree-item-content" data-has-children="">
                <div class="datagrid-tree-item-left" style="width: 40px;">
                    {foreach $columns as $key => $column}
                        {include sortingBlockForFirstColumn, 'column' => $column, 'key' => $key}
                        {breakIf TRUE}
                    {/foreach}
                </div>
                <div class="datagrid-tree-item-right">
                    <div class="datagrid-tree-item-right-columns">
                        {foreach $columns as $key => $column}
                            {continueIf $iterator->isFirst()}
                            {include sortingBlockForSecondColumn, 'column' => $column, 'key' => $key}
                        {/foreach}
                    </div>
                    <div class="datagrid-tree-item-right-actions" n:if="($actions || $control->isSortable()) && $rows">
                        <div class="datagrid-tree-item-right-actions-action">
                            {var $tmp_row = reset($rows)}

                            {foreach $actions as $key => $action}
                                {if $tmp_row->hasAction($key)}
                                    {if $action->hasTemplate()}
                                        {include $action->getTemplate(), item => $tmp_row->getItem(), (expand) $action->getTemplateVariables(), row => $tmp_row}
                                    {else}
                                        {$action->render($tmp_row)|noescape}
                                    {/if}
                                {/if}
                            {/foreach}

                            <span class="handle-sort btn btn-xs btn-default" n:if="$control->isSortable()">
								<i class="{$icon_prefix}arrows"></i>
							</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div n:snippet="allItemsWrapper">
            <div n:snippet="tbody">
                <div class='parent-wrapper'>
                    {foreach $rows as $row}
                        {var $has_children = $control->hasTreeViewChildrenCallback() ? $control->treeViewChildrenCallback($row->getItem()) : $row->getValue($tree_view_has_children_column)}
                        {var $item = $row->getItem()}
                        {var $uniqueID = $row->getId() . $row->getItem()->getName()}

                        <div n:class="$has_children ? 'has-children', 'datagrid-tree-item'"  data-id="{$row->getId()}"
                                n:snippet="item-{$uniqueID}">
                            <div n:class="datagrid-tree-item-content, $row->getControlClass()" data-id="{$row->getId()}"  data-has-children="{$has_children ? true : false}">
                                <div class="datagrid-tree-item-left" style="width: 40px;">
                                    <a n:href="getChildren! parent => $row->getId()" data-toggle-tree="true" n:class="!$has_children ? hidden, 'chevron ajax'">
                                        <i n:block="icon-chevron" class="{$icon_prefix}chevron-right"></i>
                                    </a>
                                    {foreach $columns as $key => $column}
                                        {var $col = 'col-' . $key}
                                        {php $column = $row->applyColumnCallback($key, clone $column)}

                                        {if $column->hasTemplate()}
                                            {include $column->getTemplate(), item => $item, (expand) $column->getTemplateVariables()}
                                        {else}
                                            {ifset #$col}
                                                {include #$col, item => $item}
                                            {else}
                                                {if $column->isTemplateEscaped()}
                                                    {$column->render($row)}
                                                {else}
                                                    {$column->render($row)|noescape}
                                                {/if}
                                            {/ifset}
                                        {/if}

                                        {breakIf TRUE}
                                    {/foreach}
                                </div>
                                <div class="datagrid-tree-item-right">
                                    <div class="datagrid-tree-item-right-columns">
                                        {foreach $columns as $key => $column}
                                            {continueIf $iterator->isFirst()}

                                            <div class="datagrid-tree-item-right-columns-column text-{$column->hasAlign() ? $column->getAlign() : 'left'}">
                                                {var $col = 'col-' . $key}
                                                {php $column = $row->applyColumnCallback($key, clone $column)}

                                                {if $column->hasTemplate()}
                                                    {include $column->getTemplate(), row => $row, item => $item, (expand) $column->getTemplateVariables()}
                                                {else}
                                                    {ifset #$col}
                                                        {include #$col, item => $item}
                                                    {else}
                                                        {if $column->isTemplateEscaped()}
                                                            {$column->render($row)}
                                                        {else}
                                                            {$column->render($row)|noescape}
                                                        {/if}
                                                    {/ifset}
                                                {/if}
                                            </div>
                                        {/foreach}
                                    </div>
                                    <div class="datagrid-tree-item-right-actions">
                                        <div class="datagrid-tree-item-right-actions-action">
                                            {foreach $actions as $key => $action}
                                                {if $row->hasAction($key)}
                                                    {if $action->hasTemplate()}
                                                        {include $action->getTemplate(), item => $item, (expand) $action->getTemplateVariables(), row => $row}
                                                    {else}
                                                        {$action->render($row)|noescape}
                                                    {/if}
                                                {/if}
                                            {/foreach}

                                            <span class="handle-sort btn btn-xs btn-default" n:if="$control->isSortable()">
                                                                            <i n:block = "icon-arrows" class="{$icon_prefix}arrows"></i>
                                                                    </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="datagrid-tree-item-children" {if $control->isSortable()}data-sortable-tree data-sortable-url="{plink $control->getSortableHandler()}"{/}>

                            </div>
                        </div>
                    {/foreach}
                </div>
            </div>
        </div>
        <div class="row-grid-bottom" n:snippet="pagination">
            <div class="col-items">
                <small class="text-muted" n:if="$control->isPaginated()">
                    ({var $paginator = $control['paginator']->getPaginator()}

                    {if $control->getPerPage() === 'all'}
                    {='ublaboo_datagrid.items'|translate}: {='ublaboo_datagrid.all'|translate}
                    {else}
                    {='ublaboo_datagrid.items'|translate}: {$paginator->getOffset() > 0 ? $paginator->getOffset() + 1 : ($paginator->getItemCount() > 0 ? 1 : 0)} - {sizeof($rows) + $paginator->getOffset()}
                    {='ublaboo_datagrid.from'|translate} {$paginator->getItemCount()}
                    {/if})
                </small>
            </div>
            <div class="col-pagination text-center">
                {**
                * Pagination
                *}
                {control paginator}
            </div>
            <div class="col-per-page text-right">
                {**
                * Items per page form (display only beside paginated grido)
                *}
                {if $control->isPaginated()}
                    {input $filter['per_page'], data-autosubmit-per-page => TRUE, class => 'form-control input-sm'}
                    {input $filter['per_page_submit'], class => 'datagrid-per-page-submit'}
                {/if}
            </div>
        </div>
        {if !$rows}
            {='ublaboo_datagrid.no_item_found'|translate}
        {/if}
    {/snippetArea}

    {define sortingBlockForFirstColumn}
        {if $column->isSortable()}
            <a n:class="$column->isSortedBy() ? 'sort' : '', 'ajax'"
                    href="{link sort!, sort => $control->getSortNext($column)}"
                    id="datagrid-sort-{$key}">
                <strong>{$column->getName()|translate}</strong>
                {if $column->isSortedBy()}
                    {if $column->isSortAsc()}
                        <i class="{$icon_prefix}caret-up"></i>
                    {else}
                        <i class="{$icon_prefix}caret-down"></i>
                    {/if}
                {else}
                    <i class="{$icon_prefix}sort"></i>
                {/if}
            </a>
        {else}
            <strong>{$column->getName()|translate}</strong>
        {/if}
    {/define}
    {define sortingBlockForSecondColumn}
        {if $column->isSortable()}
            <div class="datagrid-tree-item-right-columns-column col-{$column->getColumnName()} text-{$column->hasAlign() ? $column->getAlign() : 'left'}">
                <a n:class="$column->isSortedBy() ? 'sort' : '', 'ajax'"
                        href="{link sort!, sort => $control->getSortNext($column)}"
                        id="datagrid-sort-{$key}">
                    <strong>{$column->getName()|translate}</strong>
                    {if $column->isSortedBy()}
                        {if $column->isSortAsc()}
                            <i class="{$icon_prefix}caret-up"></i>
                        {else}
                            <i class="{$icon_prefix}caret-down"></i>
                        {/if}
                    {else}
                        <i class="{$icon_prefix}sort"></i>
                    {/if}
                </a>
            </div>
        {else}
            <div class="datagrid-tree-item-right-columns-column col-{$column->getColumnName()} text-{$column->hasAlign() ? $column->getAlign() : 'left'}">
                <strong>{$column->getName()|translate}</strong>
            </div>
        {/if}
    {/define}
    <style>

        .datagrid .datagrid-tree .datagrid-tree-item {
            margin-left: 20px;
        }

        .datagrid-tree .datagrid-tree-header {
            border-bottom-width: 0!important;
            background-color: #aaaaaa;
            border: 1px solid #ddd;
        }

        .datagrid .datagrid-tree .datagrid-tree-item {
            margin-left: 0px!important;
            padding-left: 35px;
        }

        .datagrid .datagrid-tree .parent-wrapper > .datagrid-tree-item:nth-of-type(even) {
            background-color: #f9f9f9;
        }

        .parent-wrapper {
            border: 1px solid #aaaaaa;
        }

        .datagrid .datagrid-tree .datagrid-tree-item.active {
            background-color: #ececec!important;
        }

        .row-filters {
            border: 1px solid #cecece;
            margin: 0px!important;
        }

        .row-filters .row > div,
        .row-filters .row > label {
            margin-top: 10px;
        }

        .datagrid .datagrid-tree .datagrid-tree-item .datagrid-tree-item-content .datagrid-tree-item-left,
        .datagrid .datagrid-tree .datagrid-tree-item .datagrid-tree-item-content .datagrid-tree-item-right {
            justify-content: flex-start;
        }

    </style>
</div>
